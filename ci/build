#!/bin/bash -eux

set -o pipefail

readonly KERNEL_VERSION=${1:?}
readonly ARCH=${2:?}
readonly KERNEL_VERSION_MAJOR=$(echo $KERNEL_VERSION | cut -d '.' -f 1-2)
readonly GCC_MAJOR_VERSION=$(gcc --version | head -n 1 | sed -e 's/^.* \([0-9]\).[0-9].[0-9] .*$/\1/')
readonly PROC_COUNT=$(grep -c '^processor' /proc/cpuinfo)


# download
kernel_archive=~/Linux/linux-${KERNEL_VERSION}.tar.xz
if [ ! -f $kernel_archive ]
then
  url=https://www.kernel.org/pub/linux/kernel/v${KERNEL_VERSION_MAJOR}/linux-${KERNEL_VERSION}.tar.xz
  mkdir -pv $(dirname $kernel_archive)
  curl "$url" > $kernel_archive
fi

# extract kernel
kernel_dir=$HOME/Linux/linux-${KERNEL_VERSION}
if [ ! -d $kernel_dir ]
then
  tar -xJf $kernel_archive -C ~/Linux
fi

pushd $kernel_dir
  # fix compilation of old kernels with recent GCC
  if [ ! -f include/linux/compiler-gcc${GCC_MAJOR_VERSION}.h ]
  then
    pushd include/linux
    if [ -f compiler-gcc5.h -a $GCC_MAJOR_VERSION -gt 5 ]
    then
      ln -sv compiler-gcc5.h compiler-gcc${GCC_MAJOR_VERSION}.h
    else
      ln -sv compiler-gcc4.h compiler-gcc${GCC_MAJOR_VERSION}.h
    fi
    popd
  fi

  # configure kernel
  make mrproper
  make -j $PROC_COUNT ARCH=${ARCH} ${ARCH}_defconfig || true
  make -j $PROC_COUNT ARCH=${ARCH} modules_prepare || true
popd

# build
pushd src
make clean
make -j $PROC_COUNT KERNELDIR=$kernel_dir ARCH=$ARCH
popd
